# Product: data_type_name
# Data Label: DATA_LABEL
# Created: 2024-02-25 - author
# Last Updated: 2024-02-25 - author

filter {
  mutate {
    replace => {
      "event.idm.read_only_udm.metadata.log_type" => "DATA_LABEL"
      "event.idm.read_only_udm.metadata.vendor" => "vendor_name"
      "event.idm.read_only_udm.metadata.event_type" => "GENERIC_EVENT"
    }
  }
grok {
  match => {
    "message" => [
      "^(?P<syslog_header><%{NONNEGINT:facility}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} %{SYSLOGPROG:syslog_prog}): %{GREEDYDATA:syslog_message}$" # syslog bsd format
      "^(?P<syslog_header><%{NONNEGINT:facility}>%{NONNEGINT:version} %{TIMESTAMP_ISO8601:timestamp} %{SYSLOGHOST:hostname} %{SYSLOGPROG:syslog_prog}): %{GREEDYDATA:syslog_message}$" # syslog IETF format
    ]
  }
  overwrite => [ "syslog_header", "facility", "version", "hostname", "syslog_prog", "syslog_message" ]
  on_error => "zerror.grok.738727120542"
}
}
filter {
  # Apply kv filter to message, put result in target
  kv {
    # required fields
    source => "message"
    field_split => "|"
    value_split => "="
    target => "kv_data"
    on_error => "zerror.kv.090626279142"
    # optional fields
    # unescape_field_split => true   # Default is false, set to true if field_split contains escaped characters
    # unescape_value_split => true   # Default is false, set to true if value_split contains escaped characters
    # whitespace => "strict"       # Default is lenient, set to strict if whitespace should not be ignored
    # trim_value => ""         # To remove extraneous characters from the value
  }
  # Set metadata.event_type with right-hand string
  mutate {
    replace => {
      "event.idm.read_only_udm.metadata.event_type" => "GENERIC_EVENT"
    }
    on_error => "zerror.replace.420792361278"
  }
  # Copy source into kv_data
  mutate {
    replace => {
      "kv_data.date" => "%{kv_data.date} %{kv_data.tz}"
    }
    on_error => "zerror.copy.444845525794"
  }
  # set event_timestamp using kv_data.date
  date {
    match => [
      # Source field
      "kv_data.date"
      # Patterns to match
      "UNIX_MS"
      "UNIX"
      "ISO8601"
      "RFC3399"
      "MM dd HH:mm:ss Z"
      "MM  d HH:mm:ss"
      "MMM dd HH:mm:ss Z"
      "MMM  d HH:mm:ss"
    ]
    rebase => true
    on_error => "zerror.date.927376225228"
  }
  statedump { label => "line_16" }
  # Merge event into @output array
  mutate {
    merge => {
      "@output" => "event"
    }
    on_error => "zerror.merge.777107651446"
  }
}
