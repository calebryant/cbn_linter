filter {
    else if [event_message] =~ "SLB server" {
            # GROK principal_hostname
            grok {
                match => {
                    "event_message" => [ 'server %{DATA:principal_hostname} ' ]
                }
                overwrite => ["principal_hostname"]
                on_error => "zerror.grok_principal_hostname"
            }
            # GROK principal_address
            grok {
                match => {
                    "event_message" => [ 'SLB server %{DATA} \\(%{DATA:principal_address}\\)' ]
                }
                overwrite => ["principal_address"]
                on_error => "zerror.grok_principal_address"
            }
            # Check to see if principal_address is an IP address
            if ![zerror][grok_principal_address] {
                # GROK principal_ip
                grok {
                    match => {
                        "principal_address" => [
                            "%{IP:principal_ip}"
                        ]
                    }
                    overwrite => ["principal_ip"]
                    on_error => "zerror.grok_principal_ip"
                }
            }
            # if principal_address is not an IP, set it as the FQDN
            if [zerror][grok_principal_ip] {
                mutate {
                    replace => {
                        "principal_fqdn" => "%{principal_address}"
                    }
                }
            }
            # GROK principal_port
            grok {
                match => {
                    "event_message" => [ 'port %{INT:principal_port} ' ]
                }
                overwrite => ["principal_port"]
                on_error => "zerror.grok_principal_port"
            }
            # GROK principal_status
            grok {
                match => {
                    "event_message" => [
                        'is %{DATA:principal_status} '
                        'is %{DATA:principal_status}$'
                        ]
                }
                overwrite => ["principal_status"]
                on_error => "zerror.grok_principal_status"
            }
            # GROK virtual_server
            grok {
                match => {
                    "event_message" => [ 'port %{INT} of group %{DATA:virtual_server} ' ]
                }
                overwrite => ["virtual_server"]
                on_error => "zerror.grok_virtual_server"
            }
        }
}