filter {
    mutate {
        replace => {
            "destination" => "%{string}"
        }
        on_error => "zerror.replace_string"
    }
    grok {
        match => {
            "message" => [ "^CEF:%{INT}[|]%{DATA:vendor_name}[|]%{DATA:product_event}[|]%{DATA:product_version}[|]%{DATA:summary}[|]%{DATA:description}[|]%{DATA:severity}[|]%{GREEDYDATA:cef_data} rawEvent=%{GREEDYDATA:raw_event} (?P<valuename>here is my pattern)$"  
                "^CEF:%{INT}[|]%{DATA:vendor_name}[|]%{DATA:product_event}[|]%{DATA:product_version}[|]%{DATA:summary}[|]%{DATA:description}[|]%{DATA:severity}[|]%{GREEDYDATA:cef_data} rawEvent=%{GREEDYDATA:raw_event} (?P<valuename>here is my pattern)$"  
                "^CEF:%{INT}[|]%{DATA:vendor_name}[|]%{DATA:product_event}[|]%{DATA:product_version}[|]%{DATA:summary}[|]%{DATA:description}[|]%{DATA:severity}[|]%{GREEDYDATA:cef_data} rawEvent=%{GREEDYDATA:raw_event} (?P<valuename>here is my pattern)$"  
            ],
        }
        overwrite => [ "product_version" ]
        on_error => "zerror.grok_source"
    }
}