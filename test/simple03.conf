filter {
   grok {
        match => {
            "message" => [ "^CEF:%{INT}[|]%{DATA:vendor_name}[|]%{DATA:product_event}[|]%{DATA:product_version}[|]%{DATA:summary}[|]%{DATA:description}[|]%{DATA:severity}[|]%{GREEDYDATA:cef_data} rawEvent=%{GREEDYDATA:raw_event} (?P<valuename>here is my pattern)$"  
                "^CEF:%{INT}[|]%{DATA:vendor_name}[|]%{DATA:product_event}[|]%{DATA:product_version}[|]%{DATA:summary}[|]%{DATA:description}[|]%{DATA:severity}[|]%{GREEDYDATA:cef_data} rawEvent=%{GREEDYDATA:raw_event} (?P<valuename>here is my pattern)$"  
                "^CEF:%{INT}[|]%{DATA:vendor_name}[|]%{DATA:product_event}[|]%{DATA:product_version}[|]%{DATA:summary}[|]%{DATA:description}[|]%{DATA:severity}[|]%{GREEDYDATA:cef_data} rawEvent=%{GREEDYDATA:raw_event} (?P<valuename>here is my pattern)$"  
            ],
        }
        overwrite => [ "product_version" ]
        on_error => "zerror.grok_source"
    }
     mutate {
             replace => {
                     "hostname" => "hello"
                     "user" => "goodbye"
             }
     }
     
     json {
        source => "message"
        on_error => "error.no_json"
     }

     if [user] != "" {
        mutate {
           merge => {
              "event.idm.read_only_udm.principal.user.user_display_name" => "%{user}"            
           }
        }
     }

     if [hostname] != "" {
        mutate {
           merge => {
              "event.idm.read_only_udm.principal.hostname" => "%{hostname}"            
           }
        }
     }

    mutate {
      merge => {
          "@output" => "event"
      }
    }
}
